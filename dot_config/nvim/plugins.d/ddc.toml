# skkeletonの補完メニューを提供してもらってる
[[plugins]]
repo = 'Shougo/ddc.vim'
depends = 'denops.vim'
lua_add = '''
  require('config.plugins.ddc').init()
'''

# ddc.vimの補完メニューとしてpum.vimを使うためのやつ
[[plugins]]
repo = 'Shougo/ddc-ui-pum'
depends = 'pum.vim'

[[plugins]]
repo = 'Shougo/ddc-ui-native'

# Shougo先生による補完メニューの実装
[[plugins]]
repo = 'Shougo/pum.vim'
# キーマップはnvim-cmpで解決するのでここでは設定しない
hook_add = '''
  function! s:SetupPum() abort
    call pum#set_option('border', 'none')
  endfunction
  " なんかのプラグインがpum.vimを呼び出したときに実行する
  " Vimの初期化より先に実行したい処理ではないため
  autocmd VimRc SourcePost pum.vim ++once call s:SetupPum()
'''

[[plugins]]
repo = 'Shougo/ddc-source-nvim-lsp'

[[plugins]]
repo = 'Shougo/ddc-source-cmdline'

# pacman -S words
[[plugins]]
repo = 'uga-rosa/ddc-source-dictionary'

[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]]
repo = 'matsui54/ddc-buffer'

[[plugins]]
repo = 'Shougo/neco-vim'

[[plugins]]
repo = 'uga-rosa/ddc-preview.nvim'
lua_add = '''
  vim.api.nvim_create_autocmd('CompleteChanged', {
    group = 'VimRc',
    once = true,
    callback = function(e)
      local preview = require 'ddc_previewer_floating'
      preview.setup {
        ui = vim.env['NVIM_DDC_UI'],
        window_options = {
          wrap = false,
          number = false,
          relativenumber = false,
          signcolumn = 'no',
          foldenable = false,
          foldcolumn = '0',
        },
      }
      preview.enable()
    end,
  })
'''

[[plugins]]
repo = 'Shougo/ddc-filter-sorter_rank'

[[plugins]]
repo = 'Shougo/ddc-filter-matcher_head'
